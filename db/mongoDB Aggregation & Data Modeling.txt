1. Schemas

users Collection
{
  _id: ObjectId("u1"),
  name: "Alice",
  joined: ISODate("2024-01-15T09:00Z")
}

follows Collection
{
  follower: "u1",     // user who follows
  following: "u2"     // user being followed
}

posts Collection
{
  _id: ObjectId("p1"),
  author: "u2",              // user ID of author
  content: "Hello!",
  created: ISODate("2024-03-10T18:00Z")
}

2. Aggregation Pipeline

db.follows.aggregate([
  {
    $match: {
      follower: "u1"
    }
  },
  {
    $lookup: {
      from: "posts",
      localField: "following",
      foreignField: "author",
      as: "posts"
    }
  },
  {
    $unwind: "$posts"
  },
  {
    $lookup: {
      from: "users",
      localField: "posts.author",
      foreignField: "_id",
      as: "authorDetails"
    }
  },
  {
    $unwind: "$authorDetails"
  },
  {
    $project: {
      _id: 0,
      content: "$posts.content",
      created: "$posts.created",
      author: "$authorDetails.name"
    }
  },
  {
    $sort: {
      created: -1
    }
  },
  {
    $limit: 10
  }
])

3. Indexing

I would prefer to add indexing on "author" and "created" fields in the posts collection to improve the performance of the query.
and on the "follower" i would index it in the follows collection to improve the performance of the query.
These fields are the basic fields in the aggregation pipeline.
